#URLS
endpoints.sensitive=false

spring.aop.proxy-target-class=true
spring.application.name=retail_iam_server

nx3.application.description=Control your users
nx3.application.contactEmail=mail@serie-a.de
nx3.application.contactUrl=http://serie-a.de
nx3.application.passwordRegex=^.*(?=.{8,})(?=.*[a-z]+)(?=.*[A-Z]+)(?=.*\\d+)(?!.*[\\s]).*$
nx3.application.include-core-translations=false
info.displayName=NX3 CLI
info.displayVersion=3.4.0-SNAPSHOT
info.build.groupId=de.seriea.nx3
info.build.artifactId=nx3-cli
info.build.version=3.4.0-SNAPSHOT
server.port=9999
server.contextPath=/uaa
spring.profiles.active=logconsole, populate

#Actuator
management.context-path=/manage
security.user.name=management
security.user.password=1n73rn4lu53r
spring.boot.admin.password=${security.user.password}
spring.boot.admin.username=${security.user.name}
spring.boot.admin.client.metadata.user.name=${security.user.name}
spring.boot.admin.client.metadata.user.password=${security.user.password}

# DATASOURCE/JPA
# Number of ms to wait before throwing an exception if no connection is available.
spring.datasource.dbcp2.max-wait-millis=2000
# Specify the number of initial connections
spring.datasource.dbcp2.initial-size=5
# Maximum number of active connections that can be allocated from this pool at the same time.
spring.datasource.dbcp2.max-total=20
spring.datasource.dbcp2.max-idle=5
spring.datasource.dbcp2.min-idle=1
# To validate connection you need to specify a validation-query and when to validate. As you want to validate periodically, instead of when a connection is retrieved from the pool (this to prevent broken connections in your pool).
spring.datasource.dbcp2.test-while-idle=true
# Validate the connection before borrowing it from the pool.
spring.datasource.dbcp2.test-on-borrow=true
spring.datasource.dbcp2.validation-query=SELECT 1
spring.datasource.dbcp2.time-between-eviction-runs-millis=5000
spring.datasource.dbcp2.min-evictable-idle-time-millis=60000

spring.datasource.url=jdbc:h2:mem:test;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.spatial.dialect.h2geodb.GeoDBDialect

#Lucene Indexer
spring.jpa.properties.hibernate.search.default.directory_provider=ram
spring.jpa.properties.hibernate.search.default.indexwriter.ram_buffer_size=128

nx3.keystore.key-alias=transport
nx3.keystore.key-password=nx3WirdGrossGeschrieben
nx3.keystore.classpath-resource=transport.jks
nx3.keystore.password=trytothinkaboutapasswordbutnothingappears

nx3.iam.secret=YXNkaXNmZ3hjdmFzc5Rxd1UxcWRhc2Rhc9R5eFlzYbRzZGE
nx3.iam.access-token-validity-seconds=86400

infinispan.embedded.configXml=cache/infinispan-local-cache.xml
nx3.cache.cluster=false

nx3.application.public-key=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAp1s3mj6ApKkHICWUfDp3T42n0AO5tatSsJlRdozE0yuzWARXeanJXSo6wXVukWJQv5PAND69IS9yjA0z/DvFyimnncesZs/rMI/qGb+apHWS1JjC5Zrl+j4bw9DTP3L9EBcXgRZbd6fhswvUiZwPaKMQaass+1dN/xFMCU7cQmMLXeUtfqSqvwVJC8J+UlM7RtpLIIUwCXkgwQdRPSBfLEDWRiHVn2se9JbXOraGNk3gb9MfXTgzW8qgiqUjren+SVEWyjwvBKNxOnLI9mO91w3yHdsbUdCVrc8T084ExqJ8J8469nkZZpoygp1u0VCuKQg5bPJ3LzP9B4duvj0uuQIDAQAB


#Logging
logging.level.root=INFO
logging.level.de.seriea.nx3=INFO
logging.level.org.springframework=INFO
logging.level.org.hibernate.tool.hbm2ddl=INFO
logging.level.org.hibernate.SQL=INFO
logging.level.org.springframework.web.client=ERROR
logging.level.org.apache.http.wire=ERROR
logging.level.org.apache.http.impl.client=ERROR
logging.level.org.flywaydb=ERROR
logging.level.org.hibernate.search=ERROR
logging.level.org.reflections=ERROR
logging.level.springfox.documentation.spring.web.readers.operation=ERROR
logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=ERROR
logging.level.org.jgroups.protocols=ERROR